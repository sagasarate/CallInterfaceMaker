[
    {
        "Name": "bool",
        "CType": "bool",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberBoolean(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsBoolean();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(1)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = false",
            "InitOperation": "<Variable> = false;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "char",
        "CType": "sbyte",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberSByte(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsSByte();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(1)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "short",
        "CType": "short",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberShort(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsShort();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(2)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "int",
        "CType": "int",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberInt(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsInt();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(4)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "BYTE",
        "CType": "byte",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberByte(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsByte();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(1)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "WORD",
        "CType": "ushort",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberUShort(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsUShort();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(2)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "UINT",
        "CType": "uint",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberUInt(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsUInt();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(4)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "INT64",
        "CType": "long",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberInt64(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsInt64();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(8)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "UINT64",
        "CType": "ulong",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberUInt64(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsUInt64();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(8)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "String",
        "CType": "string",
        "Flag": 192,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMember(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsString();",
            "SizeCaculateOperation": "SmartStruct.GetStringMemberSize(<Variable>)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = \"\"",
            "InitOperation": "<Variable>=\"\";",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "CSmartStruct",
        "CType": "CSmartStruct",
        "Flag": 132,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMember(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsStruct();",
            "SizeCaculateOperation": "SmartStruct.GetStructMemberSize(<Variable>:GetDataLen())",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = SmartStruct.New(16)",
            "InitOperation": "<Variable>=SmartStruct.New(16);",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>:Clone();<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value:Clone();\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "OBJECT_ID",
        "CType": "OBJECT_ID",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMember(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>.ID) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>.ID=Value:GetValueAsUInt64();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(8)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = NewObject(OBJECT_ID)",
            "InitOperation": "<Variable>=NewObject(OBJECT_ID);",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then</IfInDataObject>\r\n\t<LeftValue><Variable>.ID = <RightValue><Variable>.ID;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "float",
        "CType": "float",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberFloat(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsFloat();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(4)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "ByteArray",
        "CType": "byte[]",
        "Flag": 132,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMember(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsByteArray();",
            "SizeCaculateOperation": "SmartStruct.GetBinaryMemberSize(<Variable>:GetDataLen())",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = ByteArray.New(16)",
            "InitOperation": "<Variable>=ByteArray.New(16);",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>:Clone();<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value:Clone();\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "TimeStamp",
        "CType": "uint",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberUInt(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsUInt();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(4)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "",
            "ReferenceUse": "",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF></IfInDataObject>\r\n<IfInDataObject>end</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "double",
        "CType": "double",
        "Flag": 64,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMemberDouble(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsDouble();",
            "SizeCaculateOperation": "SmartStruct.GetFixMemberSize(8)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "",
            "ReferenceUse": "",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "CSmartArray",
        "CType": "CSmartArray",
        "Flag": 132,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMember(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValueAsArray();",
            "SizeCaculateOperation": "SmartStruct.GetArrayMemberSize(<Variable>:GetDataLen())",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "",
            "ReferenceUse": "",
            "VariableDefine": "<Variable> = SmartArray.New(16)",
            "InitOperation": "<Variable>=SmartArray.New(16);",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>:Clone();<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value:Clone();\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    },
    {
        "Name": "Variant",
        "CType": "Variant",
        "Flag": 192,
        "GenerateOperations": {
            "PackOperation": "if not <Packet>:AddMember(<IfNotInArray><SpaceName>.<SST_NAME>.<SST_ID>, </IfNotInArray><Variable>) then\r\n\tFailCount=FailCount+1;\r\nend",
            "UnpackOperation": "<Variable>=Value:GetValue();",
            "SizeCaculateOperation": "SmartStruct.GetVariedMemberSize(<Variable>)",
            "ToXMLOperation": "",
            "FromXMLOperation": "",
            "ToJsonOperation": "",
            "FromJsonOperation": "",
            "ReferenceDefine": "<Type>",
            "ReferenceUse": "<Variable>",
            "VariableDefine": "<Variable> = 0",
            "InitOperation": "<Variable>=0;",
            "CloneOperation": "<IfInDataObject>if (Flag&<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>) ~= 0 then\r\n\t</IfInDataObject><LeftValue><Variable> = <RightValue><Variable>;<IfInDataObject>\r\n\t<IfUpdateMF>UpdateFlag = UpdateFlag | <SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend</IfInDataObject>",
            "GetMethodDeclare": "",
            "GetMethodDefine": "function <SpaceName>.<ClassName>:Get<VariableName>()\r\n\treturn <Variable>;\r\nend",
            "SetMethodDeclare": "",
            "SetMethodDefine": "function <SpaceName>.<ClassName>:Set<VariableName>(Value)\r\n\t<Variable>=Value;\r\n\t<IfUpdateMF>self.m_ModifyFlag=self.m_ModifyFlag|<SpaceName>.<ModifyFlagEnumName>.<ModifyFlag>;</IfUpdateMF>\r\nend",
            "IndexOperation": "",
            "ConstIndexOperation": "",
            "ToStringOperation": "",
            "DBFieldDefineOperation": "",
            "DBInsertFormatOperation": "",
            "DBPutOperation": "",
            "DBGetOperation": "",
            "FileLogFillOperation": "",
            "AliLogSendOperation": "",
            "ToLuaOperation": "",
            "FromLuaOperation": "",
            "CreateXLSColumnOperation": "",
            "CheckXLSColumnOperation": "",
            "ToXLSOperation": "",
            "FromXLSOperation": "",
            "FormatSpecOperation": ""
        }
    }
]