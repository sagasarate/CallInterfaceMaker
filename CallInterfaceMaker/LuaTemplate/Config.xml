<?xml version="1.0" encoding="utf-8"?>
<Config>
	<OneFileExport IsExport="false" FileExt=""/>
	<InterfaceHeaderExport IsExport="true" FileExt="lua"/>
	<StructExport IsExport="true" FileExt="lua"/>
	<EnumExport IsExport="true" FileExt="lua"/>
	<ConstExport IsExport="true" FileExt="lua"/>
	<DataStructHeaderExport IsExport="true" FileExt="lua"/>
	<InterfaceExport IsExport="true" FileExt="lua"/>
	<CallHeaderExport IsExport="false" FileExt=""/>
	<CallSourceExport IsExport="true" FileExt="lua"/>
	<HandlerHeaderExport IsExport="false" FileExt=""/>
	<HandlerSourceExport IsExport="true" FileExt="lua"/>
	<DataObjectHeaderExport IsExport="false" FileExt=""/>
	<DataObjectSourceExport IsExport="true" FileExt="lua"/>
	<DataObjectModifyFlagsHeaderExport IsExport="false" FileExt=""/>
	<DataObjectModifyFlagsSourceExport IsExport="true" FileExt="lua"/>
	<DefaultStructGenerateOperations PackOperation="local SubPacket=&lt;Packet&gt;:PrepareSubStruct();&#13;&#10;&lt;IfNotDataObject&gt;&#13;&#10;if not &lt;Variable&gt;:MakePacket(SubPacket) then &#13;&#10;&tab;FailCount=FailCount+1; &#13;&#10;end&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;&#13;&#10;if not &lt;Variable&gt;:MakePacket(SubPacket,MemberFlags) then &#13;&#10;&tab;FailCount=FailCount+1; &#13;&#10;end&lt;/IfDataObject&gt;&#13;&#10;&lt;Packet&gt;:FinishMember(&lt;IfNotInArray&gt;&lt;SpaceName&gt;.&lt;SST_NAME&gt;.&lt;SST_ID&gt;, &lt;/IfNotInArray&gt;SubPacket:GetDataLen());" UnpackOperation="&lt;IfNotDataObject&gt;&lt;Variable&gt;:ParsePacket(Value);&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;&lt;Variable&gt;:ParsePacket(Value,MemberFlags);&lt;/IfDataObject&gt;" SizeCaculateOperation="&lt;IfNotDataObject&gt;SmartStruct.GetStructMemberSize(&lt;Variable&gt;:GetSmartStructSize())&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;SmartStruct.GetStructMemberSize(&lt;Variable&gt;:GetSmartStructSize(MemberFlags))&lt;/IfDataObject&gt;" ToXMLOperation="" FromXMLOperation="" ToJsonOperation="" FromJsonOperation="" ReferenceDefine="&lt;Type&gt;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Variable&gt; = NewObject(&lt;SpaceName&gt;.&lt;Type&gt;)" InitOperation="&lt;Variable&gt;:Clear();" CloneOperation="&lt;IfCheckMF&gt;if  (Flag &amp; &lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;) ~= 0 then&lt;/IfCheckMF&gt;&#13;&#10;&tab;&lt;IfNotDataObject&gt;&lt;LeftValue&gt;&lt;Variable&gt; = &lt;RightValue&gt;&lt;Variable&gt;:Clone();&lt;/IfNotDataObject&gt;&#13;&#10;&tab;&lt;IfDataObject&gt;&lt;LeftValue&gt;&lt;Variable&gt;.CloneFrom(&lt;RightValue&gt;&lt;Variable&gt;,MemberFlags);&lt;/IfDataObject&gt;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfUpdateMF&gt;UpdateFlag=UpdateFlag|&lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfUpdateMF&gt;&lt;/IfInDataObject&gt;&#13;&#10;&lt;IfCheckMF&gt;end&lt;/IfCheckMF&gt;" GetMethodDeclare="" GetMethodDefine="function &lt;SpaceName&gt;.&lt;ClassName&gt;:Get&lt;VariableName&gt;()&#13;&#10;&tab;return self.&lt;Variable&gt;;&#13;&#10;end" SetMethodDeclare="" SetMethodDefine="function &lt;SpaceName&gt;.&lt;ClassName&gt;:Set&lt;VariableName&gt;(Value)&#13;&#10;&tab;self.&lt;Variable&gt;=Value:Clone();&#13;&#10;&tab;&lt;IfUpdateMF&gt;self.m_ModifyFlag=self.m_ModifyFlag|&lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfUpdateMF&gt;&#13;&#10;end" IndexOperation="" ConstIndexOperation="" ToStringOperation="" DBFieldDefineOperation="" DBInsertFormatOperation="" DBPutOperation="" DBGetOperation="" PropertyGridFillOperation="" LogSendOperation="" ToLuaOperation="" FromLuaOperation="" CreateXLSColumnOperation="" CheckXLSColumnOperation="" ToXLSOperation="" FromXLSOperation=""/>
	<DefaultEnumGenerateOperations PackOperation="if not &lt;Packet&gt;:AddMemberUInt(&lt;IfNotInArray&gt;&lt;SpaceName&gt;.&lt;SST_NAME&gt;.&lt;SST_ID&gt;, &lt;/IfNotInArray&gt;&lt;Variable&gt;) then&#13;&#10;&tab;FailCount=FailCount+1;&#13;&#10;end" UnpackOperation="&lt;Variable&gt;=Value:GetValueAsUInt();" SizeCaculateOperation="SmartStruct.GetFixMemberSize(4)" ToXMLOperation="" FromXMLOperation="" ToJsonOperation="" FromJsonOperation="" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Variable&gt; = 0" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfCheckMF&gt;if (Flag&amp;&lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)~=0 then&lt;/IfCheckMF&gt;&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;&lt;IfUpdateMF&gt;UpdateFlag = UpdateFlag | &lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfUpdateMF&gt;&#13;&#10;&lt;IfCheckMF&gt;end&lt;/IfCheckMF&gt;" GetMethodDeclare="" GetMethodDefine="function &lt;SpaceName&gt;.&lt;ClassName&gt;:Get&lt;VariableName&gt;()&#13;&#10;&tab;return self.&lt;Variable&gt;;&#13;&#10;end" SetMethodDeclare="" SetMethodDefine="function &lt;SpaceName&gt;.&lt;ClassName&gt;:Set&lt;VariableName&gt;(Value)&#13;&#10;&tab;self.&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfUpdateMF&gt;self.m_ModifyFlag=self.m_ModifyFlag|&lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfUpdateMF&gt;&#13;&#10;end" IndexOperation="" ConstIndexOperation="" ToStringOperation="" DBFieldDefineOperation="" DBInsertFormatOperation="" DBPutOperation="" DBGetOperation="" PropertyGridFillOperation="" LogSendOperation="" ToLuaOperation="" FromLuaOperation="" CreateXLSColumnOperation="" CheckXLSColumnOperation="" ToXLSOperation="" FromXLSOperation=""/>
	<DefaultEnum64GenerateOperations PackOperation="if not &lt;Packet&gt;:AddMemberUInt64(&lt;IfNotInArray&gt;&lt;SpaceName&gt;.&lt;SST_NAME&gt;.&lt;SST_ID&gt;, &lt;/IfNotInArray&gt;&lt;Variable&gt;) then&#13;&#10;&tab;FailCount=FailCount+1;&#13;&#10;end" UnpackOperation="&lt;Variable&gt;=Value:GetValueAsUInt64();" SizeCaculateOperation="SmartStruct.GetFixMemberSize(8)" ToXMLOperation="" FromXMLOperation="" ToJsonOperation="" FromJsonOperation="" ReferenceDefine="" ReferenceUse="" VariableDefine="&lt;Variable&gt; = 0" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfCheckMF&gt;if (Flag&amp;&lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)~=0 then&lt;/IfCheckMF&gt;&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;&lt;IfUpdateMF&gt;UpdateFlag = UpdateFlag | &lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfUpdateMF&gt;&#13;&#10;&lt;IfCheckMF&gt;end&lt;/IfCheckMF&gt;" GetMethodDeclare="" GetMethodDefine="function &lt;SpaceName&gt;.&lt;ClassName&gt;:Get&lt;VariableName&gt;()&#13;&#10;&tab;return self.&lt;Variable&gt;;&#13;&#10;end" SetMethodDeclare="" SetMethodDefine="function &lt;SpaceName&gt;.&lt;ClassName&gt;:Set&lt;VariableName&gt;(Value)&#13;&#10;&tab;self.&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfUpdateMF&gt;self.m_ModifyFlag=self.m_ModifyFlag|&lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfUpdateMF&gt;&#13;&#10;end" IndexOperation="" ConstIndexOperation="" ToStringOperation="" DBFieldDefineOperation="" DBInsertFormatOperation="" DBPutOperation="" DBGetOperation="" PropertyGridFillOperation="" LogSendOperation="" ToLuaOperation="" FromLuaOperation="" CreateXLSColumnOperation="" CheckXLSColumnOperation="" ToXLSOperation="" FromXLSOperation=""/>
	<ArrayDefineConfig PackOperation="&lt;IfCheckMF&gt;if (Flag &amp; &lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;) ~= 0 then&lt;/IfCheckMF&gt;&#13;&#10;&tab;local ArrayPacket = &lt;Packet&gt;:PrepareSubArray();&lt;ChangePacketName=ArrayPacket&gt;&#13;&#10;&tab;&lt;IfIsBaseType&gt;if not ArrayPacket.AddArray(&lt;Variable&gt;) then&#13;&#10;&tab;&tab;FailCount=FailCount+1;&#13;&#10;&tab;end&lt;/IfIsBaseType&gt;&#13;&#10;&tab;&lt;IfIsNotBaseType&gt;for i = 1, #&lt;Variable&gt;, 1 do&#13;&#10;&tab;&tab;&lt;PackOperation&gt;&#13;&#10;&tab;end&lt;/IfIsNotBaseType&gt;&#13;&#10;&tab;&lt;Packet&gt;:FinishMember(&lt;SpaceName&gt;.&lt;SST_NAME&gt;.&lt;SST_ID&gt;, ArrayPacket:GetDataLen());&#13;&#10;&lt;IfCheckMF&gt;end&lt;/IfCheckMF&gt;" UnpackOperation="elseif MemberID==&lt;SpaceName&gt;.&lt;SST_NAME&gt;.&lt;SST_ID&gt; then&#13;&#10;&tab;&lt;IfCheckMF&gt;if (Flag &amp; &lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;) ~= 0 then&lt;/IfCheckMF&gt;&#13;&#10;&tab;&tab;&lt;Variable&gt; = {};&#13;&#10;&tab;&tab;local SubPacket = Value.GetValueAsArray();&#13;&#10;&tab;&tab;&lt;IfIsBaseType&gt;SubPacket.GetArray(&lt;Variable&gt;);&lt;/IfIsBaseType&gt;&#13;&#10;&tab;&tab;&lt;IfIsNotBaseType&gt;local SubPos = SubPacket:GetFirstMemberPosition();&#13;&#10;&tab;&tab;local ArrayIndex = 1;&#13;&#10;&tab;&tab;while SubPos ~= nil do&#13;&#10;&tab;&tab;&tab;local Value;&#13;&#10;&tab;&tab;&tab;Value, SubPos = SubPacket:GetNextMember(SubPos);&#13;&#10;&tab;&tab;&tab;&lt;ArrayElementVariableDefine&gt;&#13;&#10;&tab;&tab;&tab;&lt;UnpackOperation&gt;&#13;&#10;&tab;&tab;&tab;&lt;Variable&gt;[ArrayIndex] = ArrayElement;&#13;&#10;&tab;&tab;&tab;ArrayIndex = ArrayIndex + 1;&#13;&#10;&tab;&tab;end&lt;/IfIsNotBaseType&gt;&#13;&#10;&tab;&tab;&lt;IfUpdateMF&gt;UpdateFlag=UpdateFlag|&lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfUpdateMF&gt;&#13;&#10;&tab;&lt;IfCheckMF&gt;end&lt;/IfCheckMF&gt;" SizeCaculateOperation="&lt;IfCheckMF&gt;if (Flag &amp; &lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;) ~= 0 then&lt;/IfCheckMF&gt;&#13;&#10;&tab;for i = 1, #&lt;Variable&gt;, 1 do&#13;&#10;&tab;&tab;Size = Size + &lt;ArrayElementSize&gt;;&#13;&#10;&tab;end&#13;&#10;&tab;Size = Size + SmartStruct.GetStructMemberSize(0);&#13;&#10;&lt;IfCheckMF&gt;end&lt;/IfCheckMF&gt;" ToXMLOperation="" FromXMLOperation="" ToJsonOperation="" FromJsonOperation="" ReferenceDefine="&lt;Type&gt;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Variable&gt; = {}" InitOperation="&lt;Variable&gt;={};" CloneOperation="&lt;IfCheckMF&gt;if (Flag &amp; &lt;SpaceName&gt;.&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;) ~= 0 then&lt;/IfCheckMF&gt;&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;&lt;LeftValue&gt;&lt;Variable&gt; = {};&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;for i, ArrayElement in pairs(&lt;RightValue&gt;&lt;Variable&gt;) do&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;&tab;&lt;CloneOperation&gt;&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;end&#13;&#10;&lt;IfCheckMF&gt;&tab;&lt;/IfCheckMF&gt;&lt;IfUpdateMF&gt;UpdateFlag = UpdateFlag | &lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfUpdateMF&gt;&#13;&#10;&lt;IfCheckMF&gt;end&lt;/IfCheckMF&gt;" GetMethodDeclare="" GetMethodDefine="function &lt;SpaceName&gt;.&lt;ClassName&gt;:Get&lt;VariableName&gt;()&#13;&#10;&tab;return self.&lt;Variable&gt;;&#13;&#10;end" SetMethodDeclare="" SetMethodDefine="function &lt;SpaceName&gt;.&lt;ClassName&gt;:Set&lt;VariableName&gt;(Value)&#13;&#10;&tab;&lt;CloneOperation&gt;&tab;&#13;&#10;end" IndexOperation="&lt;Variable&gt;[&lt;Index&gt;]" ConstIndexOperation="&lt;Variable&gt;[&lt;Index&gt;]" ToStringOperation="" DBFieldDefineOperation="" DBInsertFormatOperation="" DBPutOperation="" DBGetOperation="" PropertyGridFillOperation="" LogSendOperation="" ToLuaOperation="" FromLuaOperation="" CreateXLSColumnOperation="" CheckXLSColumnOperation="" ToXLSOperation="" FromXLSOperation=""/>
	<OtherConfig CommentPrefix="--" LocalVariableDefinePrefix="local " MemberVariablePrefix="self." DefaultPacketName="Packet" DefaultPacketMemberName="PacketMember" SupportBigInt="false"/>
</Config>
