<?xml version="1.0" encoding="gb2312"?>
<TypeDef>
	<Type Name="bool" CType="bool" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(BYTE))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=false;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="char" CType="char" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(char))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="short" CType="short" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(short))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="int" CType="int" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(int))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="BYTE" CType="BYTE" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(BYTE))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="WORD" CType="WORD" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(WORD))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="UINT" CType="UINT" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(UINT))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="INT64" CType="INT64" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(INT64))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="UINT64" CType="UINT64" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(UINT64))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="String" CType="LPCTSTR" Flag="0" PackOperation="if( &lt;Variable&gt; != NULL)&#13;&#10;{&#13;&#10;&tab;CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);&#13;&#10;}" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="(&lt;Variable&gt;!=NULL?CSmartStruct::GetStringMemberSize((UINT)_tcslen(&lt;Variable&gt;)):0)" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=NULL;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="CSmartStruct" CType="CSmartStruct" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;.CloneFrom(Value);&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetStructMemberSize(&lt;Variable&gt;.GetLength())" ToXMLOperation="" FromXMLOperation="" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Clear();" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;.CloneFrom(&lt;RightValue&gt;&lt;Variable&gt;);&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="const &lt;Type&gt;&amp; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline const &lt;Type&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;.CloneFrom(Value);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="OBJECT_ID" CType="OBJECT_ID" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;.ID),FailCount);" UnpackOperation="&lt;Variable&gt;.ID=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(OBJECT_ID))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;.ID);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt;.ID = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.ID=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="float" CType="float" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(float))" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;));" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="StringEx" CType="CEasyString" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="Value.GetString(&lt;Variable&gt;);&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetStringMemberSize((UINT)&lt;Variable&gt;.GetLength())" ToXMLOperation="StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), &lt;Variable&gt;);" FromXMLOperation="if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;)).getvalue();" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Clear();" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="const &lt;Type&gt;&amp; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline const &lt;Type&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="ByteArray" CType="CEasyBuffer" Flag="0" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,(LPCSTR)&lt;Variable&gt;.GetBuffer(),&lt;Variable&gt;.GetUsedSize()),FailCount);" UnpackOperation="&lt;Variable&gt;.Create(Value.GetLength());&#13;&#10;&lt;Variable&gt;.PushBack((LPCSTR)Value,Value.GetLength());&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetStringMemberSize(&lt;Variable&gt;.GetUsedSize())" ToXMLOperation="" FromXMLOperation="" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Destory();" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="const &lt;Type&gt;&amp; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline const &lt;Type&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
</TypeDef>
