<?xml version="1.0" encoding="gb2312"?>
<Config>
	<InterfaceHeaderExport IsExport="true" FileExt="h"/>
	<StructExport IsExport="true" FileExt="h"/>
	<EnumExport IsExport="true" FileExt="h"/>
	<ConstExport IsExport="true" FileExt="h"/>
	<DataStructHeaderExport IsExport="true" FileExt="h"/>
	<InterfaceExport IsExport="true" FileExt="h"/>
	<CallHeaderExport IsExport="true" FileExt="h"/>
	<CallSourceExport IsExport="true" FileExt="cpp"/>
	<HandlerHeaderExport IsExport="true" FileExt="h"/>
	<HandlerSourceExport IsExport="true" FileExt="cpp"/>
	<DataObjectHeaderExport IsExport="true" FileExt="h"/>
	<DataObjectSourceExport IsExport="true" FileExt="cpp"/>
	<DataObjectModifyFlagsExport IsExport="true" FileExt="h"/>
	<DefaultStructGenerateOperations PackOperation="UINT BufferSize;&#13;&#10;void * pBuffer=Packet.PrepareMember(BufferSize);&#13;&#10;CSmartStruct SubPacket(pBuffer,BufferSize,true);&#13;&#10;&lt;IfNotDataObject&gt;if(!&lt;Variable&gt;.MakePacket(SubPacket)) FailCount++;&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;if(!&lt;Variable&gt;.MakePacket(SubPacket,MemberFlags)) FailCount++;&lt;/IfDataObject&gt;&#13;&#10;Packet.FinishMember(&lt;SST_ID&gt;,SubPacket.GetDataLen());" UnpackOperation="&lt;IfNotDataObject&gt;&lt;Variable&gt;.ParsePacket(Value);&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;&lt;Variable&gt;.ParsePacket(Value,MemberFlags);&lt;/IfDataObject&gt;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="&lt;IfNotDataObject&gt;CSmartStruct::GetStructMemberSize(&lt;Variable&gt;.GetSmartStructSize())&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;CSmartStruct::GetStructMemberSize(&lt;Variable&gt;.GetSmartStructSize(MemberFlags))&lt;/IfDataObject&gt;" ToXMLOperation="&lt;IfNotDataObject&gt;&#13;&#10;xml_node &lt;VariableName&gt;Node=StructNode.append_child(node_element,_T(&quot;&lt;VariableName&gt;&quot;));&#13;&#10;&lt;Variable&gt;.ToXML(&lt;VariableName&gt;Node);&#13;&#10;&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;&#13;&#10;xml_node &lt;VariableName&gt;Node=StructNode.append_child(node_element,_T(&quot;&lt;VariableName&gt;&quot;));&#13;&#10;&lt;Variable&gt;.ToXML(&lt;VariableName&gt;Node);&#13;&#10;&lt;/IfDataObject&gt;" FromXMLOperation="&lt;IfNotDataObject&gt;&#13;&#10;xml_node &lt;VariableName&gt;Node=StructNode;&#13;&#10;if(&lt;VariableName&gt;Node.moveto_child(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;.FromXML(&lt;VariableName&gt;Node);&#13;&#10;}&#13;&#10;&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;&#13;&#10;xml_node &lt;VariableName&gt;Node=StructNode;&#13;&#10;if(&lt;VariableName&gt;Node.moveto_child(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;.FromXML(&lt;VariableName&gt;Node);&#13;&#10;}&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(UINT64)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&lt;/IfDataObject&gt;" ToJsonOperation="&lt;IfNotDataObject&gt;&#13;&#10;rapidjson::Value &lt;VariableName&gt;Node(rapidjson::kObjectType);&#13;&#10;&lt;Variable&gt;.ToJson(&lt;VariableName&gt;Node, Alloc);&#13;&#10;&lt;IfNotArray&gt;&#13;&#10;StructNode.AddMember(_T(&quot;&lt;VariableName&gt;&quot;), &lt;VariableName&gt;Node, Alloc);&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;&lt;VariableName&gt;Array.PushBack(&lt;VariableName&gt;Node, Alloc);&#13;&#10;&lt;/IfArray&gt;&#13;&#10;&lt;/IfNotDataObject&gt;&#13;&#10;&lt;IfDataObject&gt;&#13;&#10;rapidjson::Value &lt;VariableName&gt;Node(rapidjson::kObjectType);&#13;&#10;&lt;Variable&gt;.ToJson(&lt;VariableName&gt;Node, Alloc);&#13;&#10;&lt;IfNotArray&gt;&#13;&#10;StructNode.AddMember(_T(&quot;&lt;VariableName&gt;&quot;), &lt;VariableName&gt;Node, Alloc);&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;&lt;VariableName&gt;Array.PushBack(&lt;VariableName&gt;Node, Alloc);&#13;&#10;&lt;/IfArray&gt;&#13;&#10;&lt;/IfDataObject&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (StructNode.HasMember(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;{&#13;&#10;&tab;rapidjson::Value&amp; &lt;VariableName&gt;Node = StructNode[_T(&quot;&lt;VariableName&gt;&quot;)];&#13;&#10;&tab;if (&lt;VariableName&gt;Node.IsObject())&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;.FromJson(&lt;VariableName&gt;Node);&#13;&#10;&tab;}&#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if (ArrayElementNode.IsObject())&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;.FromJson(ArrayElementNode);&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;&#13;&#10;&lt;IfDataObject&gt;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag |= (UINT64) &lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&lt;/IfDataObject&gt;" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Clear();" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;IfNotDataObject&gt;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&lt;/IfNotDataObject&gt;&#13;&#10;&tab;&lt;IfDataObject&gt;&lt;LeftValue&gt;&lt;Variable&gt;.CloneFrom(&lt;RightValue&gt;&lt;Variable&gt;,MemberFlags);&lt;/IfDataObject&gt;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;const&gt; &lt;Type&gt;&amp; Get&lt;VariableName&gt;() &lt;const&gt;;" GetMethodDefine="inline &lt;const&gt; &lt;Type&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;() &lt;const&gt;&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<DefaultEnumGenerateOperations PackOperation="&lt;IfNot64Bit&gt;CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,(UINT)&lt;Variable&gt;),FailCount);&lt;/IfNot64Bit&gt;&#13;&#10;&lt;If64Bit&gt;CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,(UINT64)&lt;Variable&gt;),FailCount);&lt;/If64Bit&gt;" UnpackOperation="&lt;IfNot64Bit&gt;&lt;Variable&gt;=(UINT)Value;&lt;/IfNot64Bit&gt;&#13;&#10;&lt;If64Bit&gt;&lt;Variable&gt;=(UINT64)Value;&lt;/If64Bit&gt;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="&lt;IfNot64Bit&gt;CSmartStruct::GetFixMemberSize(sizeof(UINT))&lt;/IfNot64Bit&gt;&#13;&#10;&lt;If64Bit&gt;CSmartStruct::GetFixMemberSize(sizeof(UINT64))&lt;/If64Bit&gt;" ToXMLOperation="&lt;IfNot64Bit&gt;StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), (UINT)&lt;Variable&gt;);&lt;/IfNot64Bit&gt;&#13;&#10;&lt;If64Bit&gt;StructNode.append_attribute(_T(&quot;&lt;VariableName&gt;&quot;), (UINT64)&lt;Variable&gt;);&lt;/If64Bit&gt;" FromXMLOperation="&lt;IfNot64Bit&gt;&#13;&#10;if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = (&lt;Type&gt;)((UINT)StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;)));&#13;&#10;&lt;/IfNot64Bit&gt;&#13;&#10;&lt;If64Bit&gt;&#13;&#10;if (StructNode.has_attribute(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;&lt;Variable&gt; = (&lt;Type&gt;)((UINT64)StructNode.attribute(_T(&quot;&lt;VariableName&gt;&quot;)));&#13;&#10;&lt;/If64Bit&gt;" ToJsonOperation="" FromJsonOperation="" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=(&lt;Type&gt;)0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;if(&lt;Variable&gt;!=Value)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;&tab;}&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<ArrayDefineConfig PackOperation="&lt;IfNeedCheckModifyFlag&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfNeedCheckModifyFlag&gt;&#13;&#10;{&#13;&#10;&tab;UINT BufferSize;&#13;&#10;&tab;void * pBuffer=Packet.PrepareMember(BufferSize);&#13;&#10;&tab;{&#13;&#10;&tab;&tab;CSmartStruct Packet(pBuffer,BufferSize,true);&#13;&#10;&tab;&tab;for(size_t i=0;i&lt;&lt;Variable&gt;.GetCount();i++)&#13;&#10;&tab;&tab;{&#13;&#10;&tab;&tab;&tab;&lt;PackOperation&gt;&#13;&#10;&tab;&tab;}&#13;&#10;&tab;&tab;BufferSize=Packet.GetDataLen();&#13;&#10;&tab;}&#13;&#10;&tab;Packet.FinishMember(&lt;SST_ID&gt;,BufferSize);&#13;&#10;}" UnpackOperation="case &lt;SST_ID&gt;:&#13;&#10;&tab;&lt;IfNeedCheckModifyFlag&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfNeedCheckModifyFlag&gt;&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;Variable&gt;.Clear();&#13;&#10;&tab;&tab;CSmartStruct Packet=Value;&#13;&#10;&tab;&tab;void * Pos=Packet.GetFirstMemberPosition();&#13;&#10;&tab;&tab;while(Pos)&#13;&#10;&tab;&tab;{&#13;&#10;&tab;&tab;&tab;WORD MemberID;&#13;&#10;&tab;&tab;&tab;CSmartValue Value=Packet.GetNextMember(Pos,MemberID);&#13;&#10;&tab;&tab;&tab;switch(MemberID)&#13;&#10;&tab;&tab;&tab;{&#13;&#10;&tab;&tab;&tab;case &lt;SST_ID&gt;:&#13;&#10;&tab;&tab;&tab;&tab;{&tab;&#13;&#10;&tab;&tab;&tab;&tab;&tab;&lt;ArrayElementVariableDefine&gt;&#13;&#10;&tab;&tab;&tab;&tab;&tab;&lt;UnpackOperation&gt;&#13;&#10;&tab;&tab;&tab;&tab;&tab;&lt;Variable&gt;.Add(ArrayElement);&#13;&#10;&tab;&tab;&tab;&tab;}&#13;&#10;&tab;&tab;&tab;&tab;break;&#13;&#10;&tab;&tab;&tab;}&#13;&#10;&tab;&tab;}&#13;&#10;&tab;}&#13;&#10;&tab;break;&#13;&#10;" SizeCaculateOperation="for(size_t i=0;i&lt;&lt;Variable&gt;.GetCount();i++)&#13;&#10;{&#13;&#10;&tab;Size+=&lt;ArrayElementSize&gt;;&#13;&#10;}&#13;&#10;Size+=CSmartStruct::GetStructMemberSize(0);" ToXMLOperation="&lt;IfNeedCheckModifyFlag&gt;if((Flag&amp;&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfNeedCheckModifyFlag&gt;&#13;&#10;{&#13;&#10;&tab;xml_node &lt;VariableName&gt;NodeSave = StructNode;&#13;&#10;&tab;xml_node &lt;VariableName&gt;Node = StructNode.append_child(node_element,_T(&quot;&lt;VariableName&gt;&quot;));&#13;&#10;&tab;for(size_t i=0;i&lt;&lt;Variable&gt;.GetCount();i++)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;StructNode =  &lt;VariableName&gt;Node.append_child(node_element,_T(&quot;ArrayElement&quot;));&#13;&#10;&tab;&tab;&lt;ToXMLOperation&gt;&#13;&#10;&tab;}&tab;&#13;&#10;&tab;StructNode =  &lt;VariableName&gt;NodeSave;&#13;&#10;}" FromXMLOperation="&lt;IfNeedCheckModifyFlag&gt;if((Flag&amp;&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfNeedCheckModifyFlag&gt;&#13;&#10;{&#13;&#10;&tab;xml_node &lt;VariableName&gt;NodeSave = StructNode;&#13;&#10;&tab;xml_node &lt;VariableName&gt;Node = StructNode;&#13;&#10;&tab;if(&lt;VariableName&gt;Node.moveto_child(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;{&#13;&#10;&tab;&tab;for (UINT nc = 0; nc &lt; &lt;VariableName&gt;Node.children(); nc++)&#13;&#10;&tab;&tab;{&#13;&#10;&tab;&tab;&tab;StructNode = &lt;VariableName&gt;Node.child(nc);&#13;&#10;&tab;&tab;&tab;&lt;ArrayElementVariableDefine&gt;&#13;&#10;&tab;&tab;&tab;&lt;ArrayElementVariableInit&gt;&#13;&#10;&tab;&tab;&tab;&lt;FromXMLOperation&gt;&#13;&#10;&tab;&tab;&tab;&lt;Variable&gt;.Add(ArrayElement);&#13;&#10;&tab;&tab;}&tab;&#13;&#10;&tab;}&#13;&#10;&tab;StructNode = &lt;VariableName&gt;NodeSave;&#13;&#10;}" ToJsonOperation="&lt;IfNeedCheckModifyFlag&gt;if ((Flag&amp;&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;) != 0) &lt;/IfNeedCheckModifyFlag&gt;&#13;&#10;{&#13;&#10;&tab;rapidjson::Value &lt;VariableName&gt;Array(rapidjson::kArrayType);&#13;&#10;&tab;for (size_t i = 0; i &lt; &lt;Variable&gt;.GetCount(); i++)&#13;&#10;&tab;{&#13;&#10;&tab;&tab;&lt;ToJsonOperation&gt;&#13;&#10;&tab;}&#13;&#10;&tab;StructNode.AddMember(_T(&quot;&lt;VariableName&gt;&quot;), &lt;VariableName&gt;Array, Alloc);&#13;&#10;}" FromJsonOperation="&lt;IfNeedCheckModifyFlag&gt;if ((Flag&amp;&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;) != 0) &lt;/IfNeedCheckModifyFlag&gt;&#13;&#10;{&#13;&#10;&tab;if (StructNode.HasMember(_T(&quot;&lt;VariableName&gt;&quot;)))&#13;&#10;&tab;{&#13;&#10;&tab;&tab;rapidjson::Value&amp; &lt;VariableName&gt;Node = StructNode[_T(&quot;&lt;VariableName&gt;&quot;)];&#13;&#10;&tab;&tab;if (&lt;VariableName&gt;Node.IsArray())&#13;&#10;&tab;&tab;{&#13;&#10;&tab;&tab;&tab;for (size_t j = 0; j &lt; &lt;VariableName&gt;Node.Size(); j++)&#13;&#10;&tab;&tab;&tab;{&#13;&#10;&tab;&tab;&tab;&tab;rapidjson::Value&amp; ArrayElementNode = &lt;VariableName&gt;Node[(rapidjson::SizeType)j];&#13;&#10;&tab;&tab;&tab;&tab;&lt;ArrayElementVariableDefine&gt;&#13;&#10;&tab;&tab;&tab;&tab;&lt;ArrayElementVariableInit&gt;&#13;&#10;&tab;&tab;&tab;&tab;&lt;FromJsonOperation&gt;&#13;&#10;&tab;&tab;&tab;&tab;&lt;Variable&gt;.Add(ArrayElement);&#13;&#10;&tab;&tab;&tab;}&#13;&#10;&tab;&tab;}&tab;&tab;&#13;&#10;&tab;}&tab;&#13;&#10;}" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="CEasyArray&lt;&lt;Type&gt;&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Clear();&#13;&#10;&lt;Variable&gt;.Create(&lt;ArrayStartLength&gt;,&lt;ArrayGrowLength&gt;);" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="&lt;const&gt; CEasyArray&lt;&lt;Type&gt;&gt;&amp; Get&lt;VariableName&gt;() &lt;const&gt;;" GetMethodDefine="inline &lt;const&gt; CEasyArray&lt;&lt;Type&gt;&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;() &lt;const&gt;&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const CEasyArray&lt;&lt;Type&gt;&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const CEasyArray&lt;&lt;Type&gt;&gt;&amp; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="&lt;Variable&gt;[&lt;Index&gt;]" ConstIndexOperation="&lt;Variable&gt;[&lt;Index&gt;]"/>
</Config>
