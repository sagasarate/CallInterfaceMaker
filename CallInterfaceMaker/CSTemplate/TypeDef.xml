<?xml version="1.0" encoding="gb2312"?>
<TypeDef>
	<Type Name="bool" CType="bool" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(byte))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;Boolean.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add(&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsBoolean)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (bool)StructNode[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsBoolean)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (bool)ArrayElementNode;&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt; = false;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="char" CType="sbyte" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(sbyte))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;SByte.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=(int)&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add((int)&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (sbyte)((int)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (sbyte)((int)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="short" CType="short" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(short))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;Int16.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=(int)&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add((int)&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (short)((int)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (short)((int)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="int" CType="int" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(int))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;Int32.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add(&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = ((int)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = ((int)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="BYTE" CType="byte" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(byte))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;Byte.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=(int)&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add((int)&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (byte)((int)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (byte)((int)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="WORD" CType="ushort" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(ushort))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;UInt16.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=(int)&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add((int)&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (ushort)((int)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (ushort)((int)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="UINT" CType="uint" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(uint))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;UInt32.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=(int)&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add((int)&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (uint)((int)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (uint)((int)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="INT64" CType="long" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(long))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;Int64.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add(&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = ((long)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = ((long)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="UINT64" CType="ulong" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(ulong))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;UInt64.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=(long)&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add((long)&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (ulong)((long)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (ulong)((long)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="String" CType="string" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetStringMemberSizeUTF8(&lt;Variable&gt;)" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;;&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Attr&lt;VariableName&gt;.Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add(&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsString)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (string)StructNode[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsString)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (string)ArrayElementNode;&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;=string.Empty;" InitOperation="" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="CSmartStruct" CType="CSmartStruct" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;.CloneFrom(Value);&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetStructMemberSize(&lt;Variable&gt;.GetDataLen())" ToXMLOperation="" FromXMLOperation="" ToJsonOperation="" FromJsonOperation="" ReferenceDefine="&lt;Type&gt;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;=new &lt;Type&gt;();" InitOperation="" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;.CloneFrom(&lt;RightValue&gt;&lt;Variable&gt;);&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;.CloneFrom(Value);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="OBJECT_ID" CType="OBJECT_ID" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;.ID)) FailCount++;" UnpackOperation="&lt;Variable&gt;.ID=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize((uint)Marshal.SizeOf(typeof(OBJECT_ID)))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ID.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;UInt64.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;.ID);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=(long)&lt;Variable&gt;.ID;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add((long)&lt;Variable&gt;.ID);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsInt)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt;.ID = (ulong)((long)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsInt)&#13;&#10;{&#13;&#10;    &lt;Variable&gt;.ID = (ulong)((long)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.ID=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="float" CType="float" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(float))" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;.ToString();&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;Single.TryParse(Attr&lt;VariableName&gt;.Value,out &lt;Variable&gt;);&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=(double)&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add((double)&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsDouble)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (float)((double)StructNode[&quot;&lt;VariableName&gt;&quot;]);&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsDouble)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (float)((double)ArrayElementNode);&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="StringEx" CType="string" Flag="0" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetStringMemberSizeUTF8(&lt;Variable&gt;)" ToXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.OwnerDocument.CreateAttribute(&quot;&lt;VariableName&gt;&quot;);&#13;&#10;Attr&lt;VariableName&gt;.Value = &lt;Variable&gt;;&#13;&#10;StructNode.Attributes.Append(Attr&lt;VariableName&gt;);" FromXMLOperation="XmlAttribute Attr&lt;VariableName&gt;=StructNode.Attributes[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;if(Attr&lt;VariableName&gt;!=null)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Attr&lt;VariableName&gt;.Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" ToJsonOperation="&lt;IfNotArray&gt;&#13;&#10;StructNode[&quot;&lt;VariableName&gt;&quot;]=&lt;Variable&gt;;&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;ArrayNode.Add(&lt;Variable&gt;);&#13;&#10;&lt;/IfArray&gt;" FromJsonOperation="&lt;IfNotArray&gt;&#13;&#10;if (((IDictionary)StructNode).Contains(&quot;&lt;VariableName&gt;&quot;))&#13;&#10;{&#13;&#10;    if(StructNode[&quot;&lt;VariableName&gt;&quot;].IsString)&#13;&#10;    {&#13;&#10;        &lt;Variable&gt; = (string)StructNode[&quot;&lt;VariableName&gt;&quot;];&#13;&#10;        &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;    }&#13;&#10;    &#13;&#10;}&#13;&#10;&lt;/IfNotArray&gt;&#13;&#10;&lt;IfArray&gt;&#13;&#10;if(ArrayElementNode.IsString)&#13;&#10;{&#13;&#10;    &lt;Variable&gt; = (string)ArrayElementNode;&#13;&#10;    &lt;IfMonitorUpdate&gt;UpdateFlag |= (ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}&#13;&#10;&lt;/IfArray&gt;" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;=string.Empty;" InitOperation="" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="ByteArray" CType="byte[]" Flag="4" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&#13;&#10;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetStringMemberSize((uint)&lt;Variable&gt;.Length)" ToXMLOperation="" FromXMLOperation="" ToJsonOperation="" FromJsonOperation="" ReferenceDefine="&lt;Type&gt;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;=new byte[0];" InitOperation="" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&#13;&#10;{&#13;&#10;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&#13;&#10;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&#13;&#10;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&#13;&#10;{&#13;&#10;&tab;return &lt;Variable&gt;;&#13;&#10;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&#13;&#10;{&#13;&#10;&tab;&lt;Variable&gt;=Value;&#13;&#10;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&#13;&#10;}" IndexOperation="" ConstIndexOperation=""/>
</TypeDef>
